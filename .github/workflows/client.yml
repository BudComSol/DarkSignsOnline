on:
  - push

concurrency:
  group: client-${{ github.ref }}
  cancel-in-progress: true

name: Build client

permissions:
  contents: write

jobs:
  build-client:
    name: Build client
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
    - name: Download VB6 from public sources
      run: |
        $ErrorActionPreference = 'Stop'
        Set-PSDebug -Trace 1
        mkdir "C:\vb6"
        Invoke-WebRequest -Uri "https://archive.org/download/VisualBasic6Portable/Visual%20Basic%206%20Portable.exe" -OutFile "C:\vb6\vb6_portable.exe"
        Invoke-WebRequest -Uri "https://altushost-swe.dl.sourceforge.net/project/vb6extendedruntime/Visual%20Basic%206.0%20Runtime%20Plus%202.2.zip" -OutFile "C:\vb6\vb6runtime.zip"
        C:
        cd "C:\vb6"
        Start-Process -FilePath "C:\Program Files\7-Zip\7z.exe" -ArgumentList "x","C:\vb6\vb6_portable.exe" -Wait -PassThru
        Start-Process -FilePath "C:\Program Files\7-Zip\7z.exe" -ArgumentList "x","C:\vb6\vb6runtime.zip" -Wait -PassThru
    - name: Install VB6 runtime
      run: |
        $ErrorActionPreference = 'Stop'
        Set-PSDebug -Trace 1
        Start-Process -FilePath "C:\vb6\VB6 Runtime Plus 2.2.exe" -ArgumentList "/silent" -Wait -PassThru
        reg import ".\.github\vb6.reg"
    - name: Build client
      run: |
        $ErrorActionPreference = 'Stop'
        Set-PSDebug -Trace 1
        mkdir ".\dist"
        Start-Process -FilePath "C:\vb6\AutoPlay\Docs\Portable.VB6\Vb6.exe" -ArgumentList "/make",".\client\Project1.vbp","/outdir",".\dist\" -Wait -PassThru
        cd ".\dist"
        ..\client\mkdirs.bat
        Start-Process -FilePath "C:\Program Files\7-Zip\7z.exe" -ArgumentList "a","..\client.zip","*" -Wait -PassThru
    - name: Ensure Defender doesn't false-positive us
      run: |
        $ErrorActionPreference = 'Stop'
        Remove-MpPreference -ExclusionPath (Get-MpPreference).ExclusionPath
        Set-PSDebug -Trace 1
        Start-Process -FilePath "C:\Program Files\Windows Defender\MpCmdRun.exe" -ArgumentList "-SignatureUpdate","-http" -Wait -PassThru
        Start-Process -FilePath "C:\Program Files\Windows Defender\MpCmdRun.exe" -ArgumentList "-Scan","-ScanType","3","-File",".\dist\dso.exe" -Wait -PassThru
        if(![System.IO.File]::Exists(".\dist\dso.exe")) {
          throw (New-Object System.IO.FileNotFoundException("dso.exe not found. Defender likely nabbed it...", $path))
        }
        Start-Process -FilePath "C:\Program Files\Windows Defender\MpCmdRun.exe" -ArgumentList "-Scan","-ScanType","3","-File",".\client.zip" -Wait -PassThru
        if(![System.IO.File]::Exists(".\client.zip")) {
          throw (New-Object System.IO.FileNotFoundException("client.zip not found. Defender likely nabbed it...", $path))
        }
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: client
        path: dist/
        if-no-files-found: error
    - name: Release
      uses: softprops/action-gh-release@v2
      if: github.ref == 'refs/heads/main'
      with:
        tag_name: latest
        files: client.zip
        fail_on_unmatched_files: true
        prerelease: true
